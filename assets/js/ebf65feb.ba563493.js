"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[233],{20669:e=>{e.exports=JSON.parse('{"functions":[{"name":"InboundMiddleware","desc":"Sets some middleware to run when a bridge is fired from the client. ","params":[{"name":"middlewareTable","desc":"","lua_type":"{(player: Player, content: Types.Content) -> any}"}],"returns":[],"function_type":"method","source":{"line":40,"path":"src/Server/ServerBridge.luau"}},{"name":"OutboundMiddleware","desc":"Sets some middleware to run when a bridge is fired from the backend server.","params":[{"name":"middlewareTable","desc":"","lua_type":"{(target: Types.PlayerContainer, content: Types.Content) -> any}"}],"returns":[],"function_type":"method","source":{"line":50,"path":"src/Server/ServerBridge.luau"}},{"name":"Connect","desc":"Connects the bridge to any events recieved from the client, this is when inbound middleware is ran. This shares identical behavior with [RemoteEvent.OnClientEvent].","params":[{"name":"callback","desc":"","lua_type":"(player: Player, content: Types.Content) -> nil"},{"name":"name","desc":"","lua_type":"string?"}],"returns":[{"desc":"","lua_type":"RBXScriptConnection"}],"function_type":"method","source":{"line":63,"path":"src/Server/ServerBridge.luau"}},{"name":"RateLimit","desc":"Sets the rate limit, which makes a bridge only allow `invokesPerSecond` invoke per second.","params":[{"name":"invokesPerSecond","desc":"The maximum invokes per second allowed from the client","lua_type":"number"},{"name":"overflowFunction","desc":"The function to run if the client runs over the maximum amount of request","lua_type":"(player: Player) -> nil"}],"returns":[],"function_type":"method","source":{"line":167,"path":"src/Server/ServerBridge.luau"}},{"name":"DisableRateLimit","desc":"Disables the set rate limit for the bridge.","params":[],"returns":[],"function_type":"method","source":{"line":177,"path":"src/Server/ServerBridge.luau"}},{"name":"Wait","desc":"Connects the bridge to any events recieved from the client, this is when inbound middleware is ran. This shares identical behavior with [RemoteEvent.OnClientEvent].","params":[],"returns":[{"desc":"","lua_type":"Player, any"}],"function_type":"method","yields":true,"source":{"line":188,"path":"src/Server/ServerBridge.luau"}},{"name":"Once","desc":"Connects the bridge to any events recieved from the client, this is when inbound middleware is ran. This shares identical behavior with [clientBridgePrototype:Connect] with the difference being that the event instantly disconnects on recieved.","params":[{"name":"callback","desc":"","lua_type":"(player: Player, content: Types.Content) -> ()"}],"returns":[{"desc":"","lua_type":"RBXScriptConnection"}],"function_type":"method","source":{"line":203,"path":"src/Server/ServerBridge.luau"}},{"name":"Fire","desc":"Fires the bridge from the backend server, which can then be recieved from the client along with packet data sent along.","params":[{"name":"target","desc":"The player which the event should be fired to","lua_type":"Player | Types.PlayerContainer"},{"name":"content","desc":"The packet data which should be sent along","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":221,"path":"src/Server/ServerBridge.luau"}}],"properties":[{"name":"OnServerInvoke","desc":"Sets a function that runs when the server is invoked by the client, should return some values.","lua_type":"(player: Player, content: Types.Content?) -> ...any","source":{"line":28,"path":"src/Server/ServerBridge.luau"}}],"types":[],"name":"serverBridgePrototype","desc":"This class handles the server-sided interface of BridgeNet2.","source":{"line":20,"path":"src/Server/ServerBridge.luau"}}')}}]);